# -*- coding: utf-8 -*-
"""Multiclass classification using CNN (MNIST)

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1eisKxLA0awjd7FrJV9hFI7qqTCSkK1GZ

# Problem Statement
- Build a Multiclass classifier using the CNN model. Use MNIST or any other suitable dataset.

    > a. Perform Data Pre-processing

    > b. Define Model and perform training

    > c. Evaluate Results using confusion matrix.

## a. Perform Data Pre-Processing

### Loading Data
"""

from tensorflow.keras.datasets.mnist import load_data

(x_train, y_train), (x_test, y_test) = load_data()

x_train.shape, y_train.shape, x_test.shape, y_test.shape

"""### Normalizing Values

"""

x_train = x_train/255 # dividing by max Value
x_test = x_test/255

"""### Visualizing data"""

import matplotlib.pyplot as plt

plt.imshow(x_train[2]);

"""## b. Define Model and Perform Training"""

x_train[0].shape

from tensorflow.keras.layers import Conv2D, MaxPooling2D, Dense, InputLayer, Flatten
from tensorflow.keras.models import Sequential

model = Sequential([
    InputLayer(shape=(28,28,1)),


    Conv2D(128,kernel_size=(3,3),activation='relu'),
    MaxPooling2D((2,2)),

    Conv2D(32,kernel_size=(3,3),activation='relu'),
    MaxPooling2D((2,2)),

    Conv2D(16,kernel_size=(3,3),activation='relu'),
    MaxPooling2D((2,2)),

    Flatten(),


    Dense(10,activation='softmax')] # softmax -> more than 2 categories, # sigmoid -> 2 categories
)

model.compile(optimizer='Adam',
              loss='SparseCategoricalCrossentropy',
              metrics = ['accuracy'])

model.fit(x_train, y_train, epochs = 10)

model.evaluate(x_test, y_test)

"""## c. Evaluate Results using confusion matrix."""

import numpy as np

y_pred = model.predict(x_test)

y_pred = [np.argmax(pred) for pred in y_pred]

from sklearn.metrics import confusion_matrix

cm = confusion_matrix(y_test,y_pred)

import seaborn as sns
import matplotlib.pyplot as plt

plt.figure(figsize=(10,6))
sns.heatmap(cm,annot = True,cmap='viridis',fmt='2d');

